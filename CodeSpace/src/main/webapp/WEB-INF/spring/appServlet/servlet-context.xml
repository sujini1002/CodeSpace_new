<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> 

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.team.cos" />
	<!-- exception 처리 패키지 스캔  -->
	<context:component-scan base-package="com.team.cos.exception" />
	 
	<context:annotation-config/>
	
	<!-- PlatformTransactionManager -->
   <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <beans:property name="dataSource" ref="dataSource"/>
   </beans:bean>
   
   <!-- @Transactional 애노테이션 활성화 -->
   <tx:annotation-driven transaction-manager="transactionManager"/>
   
   <beans:bean
         id="dataSource"
         class="com.mchange.v2.c3p0.ComboPooledDataSource">
      <beans:property name="driverClass" value="com.mysql.jdbc.Driver" />
      <beans:property
            name="jdbcUrl" value="jdbc:mysql://codespace.cdsolxxcq1w4.ap-northeast-2.rds.amazonaws.com/codespace?characterEncoding=utf8" />
      <beans:property name="user" value="sujini" />
      <beans:property name="password" value="Bitcamp!123456" />
   </beans:bean>
   
   <!-- 파일업로드 처리를 위한 multipartResolver bean 등록 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>
   
   <!--mybatis 설정-->
   <beans:bean id = "sqlSessinonFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <beans:property name="dataSource" ref="dataSource"/>
      <beans:property name="mapperLocations" value="classpath:mappers/*.xml"/>
   </beans:bean>

   <!--SqlSessionTemplate 빈등록-->
   <beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
      <beans:constructor-arg index="0" ref="sqlSessinonFactory"/>
   </beans:bean>
	
</beans:beans>
